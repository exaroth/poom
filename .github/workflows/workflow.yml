name: build

on:
  push:
    branches:
      - master
jobs:
  build:
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.name }} | ${{ matrix.config.build_type }}
    strategy:
      fail-fast: false
      matrix:
        config:

        - name: Linux GCC Latest # rolling default, not actually latest
          os: ubuntu-latest
          extra_options: -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++
          deps_cmdline: sudo apt-get update && sudo apt-get install libsdl2-dev libvpx-dev libwebp-dev
          build_type: Release

        # - name: Linux Clang 15
        #   os: ubuntu-22.04
        #   extra_options: -DCMAKE_C_COMPILER=clang-15 -DCMAKE_CXX_COMPILER=clang++-15
        #   deps_cmdline: sudo apt-get update && sudo apt-get install clang-15 libsdl2-dev libvpx-dev libwebp-dev
        #   build_type: Release
    steps:
      - uses: actions/checkout@v4

      - name: Update submodules
        run: git submodule init && git submodule update

      - name: Git describe
        id: ghd
        uses: proudust/gh-describe@v2

      - name: Install general deps
        run: sudo apt-get update && sudo apt-get install desktop-file-utils libfuse2 snapd

      - name: Download appimage build tool
        run: |
          wget -nv -c https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
          chmod a+x ./appimagetool-x86_64.AppImage

      - name: Install version deps
        shell: bash
        run: |
          if [[ -n "${{ matrix.config.deps_cmdline }}" ]]; then
            eval ${{ matrix.config.deps_cmdline }}
          fi
          mkdir build

      - name: Configure
        shell: bash
        run: |
          cd gzdoom
          git pull origin master
          git checkout f4cba8e
          cmake -B build -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }} -DPK3_QUIET_ZIPDIR=ON ${{ matrix.config.extra_options }} .

      - name: Build
        shell: bash
        run: |
          cd gzdoom
          export GIT_DESCRIBE="${{ steps.ghd.outputs.describe }}"
          export MAKEFLAGS=--keep-going
          cmake --build build --config ${{ matrix.config.build_type }} --parallel 3

      - name: Create gzdoom package
        shell: bash
        run: |
          cd gzdoom/build
          mkdir package AppDir
          cmake --install . --prefix "$(realpath AppDir)/usr"

          wget -qO - https://github.com/AppImageCrafters/appimage-builder/releases/download/v1.1.0/appimage-builder-1.1.0-x86_64.AppImage \
            | tee appimage-builder | sha1sum
          echo "6f83a789f6c47a745b97d1b0b3f1df2e7eea7a09 appimage-builder" | sha1sum -c -
          chmod +x appimage-builder

          export GIT_DESCRIBE="${{ steps.ghd.outputs.describe }}"
          ./appimage-builder --skip-tests --recipe ../tools/AppImageBuilder.yml
          mv *.AppImage gzdoom.AppImage

      - name: Copy package contents
        shell: bash
        run: |
          mkdir tmp
          cp -Rf gzdoom/build/gzdoom.AppImage tmp
          ./tmp/gzdoom.AppImage --appimage-extract
          cp -Rf squashfs-root/AppRun squashfs-root/lib squashfs-root/runtime AppDir/app
          cp -Rf squashfs-root/usr AppDir
          cp ./appimagetool-x86_64.AppImage AppDir/appimagetool
          mkdir -p AppDir/wad
          wget 'https://archive.org/download/doom-wads/Doom%20%28v1.9%29%20%28Demo%29.zip' -O doom_demo.zip
          unzip doom_demo.zip
          mv DOOM1.WAD AppDir/wad/DEMO.WAD

      - name: Build appimage
        run: ARCH=x86_64 ./appimagetool-x86_64.AppImage AppDir

      - name: Upload AppImage (stable)
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: doom-builder-x86_64.AppImage
          asset_name: doom_builder
          tag: stable
          overwrite: true
